name: Docker CI/CD Pipeline

# Define the event that triggers the workflow
on:
  push:
    branches:
      - develop

# Define the jobs to be executed on the workflow
jobs:
  build_and_push:
    runs-on: ubuntu-latest # type of machine to run on
    strategy:
      matrix: # matrix to run the hob for multiple services
        service: [customer-service, product-service, cart-service, order-service, payment-service, notification-service]

    steps: # steps to be executed
      # check out the code from repo
      - name: Checkout code
        uses: actions/checkout@v2

      # set up jdk version
      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'

      # cache maven dependencies
      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      # build projects
      - name: Build with Maven
        run: mvn clean install -DskipTests
        working-directory: ./services/${{ matrix.service }}

      # run tests
      - name: Test with Maven
        run: mvn test
        working-directory: ./services/${{ matrix.service }}

      # login to docker hub with credentials
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # build docker image
      - name: Build Docker image
        run: docker build -t dungpham2502/${{ matrix.service }}:latest ./services/${{ matrix.service }}

      # push images to docker hub
      - name: Push image to Docker Hub
        uses: docker/build-push-action@v2
        with:
          context: ./services/${{ matrix.service }}
          push: true
          tags: dungpham2502/${{ matrix.service }}:latest

  deploy:
    needs: build_and_push
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Deploy to server
        uses: appleboy/ssh-action@v0.1.3
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            services=(customer-service product-service cart-service order-service payment-service notification-service)
            for service in "${services[@]}"; do
              docker pull dungpham2502/$service:latest

              docker stop $service || true
              docker rm $service || true

              case $service in
                customer-service)
                  port=8090
                  ;;
                product-service)
                  port=8050
                  ;;
                cart-service)
                  port=8100
                  ;;
                order-service)
                  port=8070
                  ;;
                payment-service)
                  port=8060
                  ;;
                notification-service)
                  port=8040
                  ;;
                *)
                  port=8000
                  ;;
              esac

              docker run -d -p $port:8080 --name $service dungpham2502/$service:latest
            done
